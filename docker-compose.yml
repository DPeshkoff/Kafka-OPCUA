version: "3"
services: 
    zookeeper:
        image: wurstmeister/zookeeper
        container_name: zookeeper
        hostname: zookeeper
        ports:
            - "2181:2181"
        logging: 
            driver: "none"

    kafka:
        image: wurstmeister/kafka
        container_name: kafka
        hostname: kafka
        ports:
            - "9092:9092"
        expose:
            - "9093"
        logging: 
            driver: "none"
        environment:
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_CREATE_TOPICS: "topic_detector:1:1"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        depends_on: 
            - zookeeper

    receiver:
        build: ./02-receiver
        container_name: receiver
        depends_on: 
            - kafka

    converter:
        build: ./04-kafka-to-opcua
        container_name: converter
        hostname: converter
        ports: 
            - 4840:4840
        depends_on: 
            - receiver

    opcua-client:
        build: ./05-opcua-client
        container_name: opcua-client
        depends_on: 
            - converter

    influxdb:
        image: influxdb:1.8
        container_name: influxdb
        restart: always
        ports:
            - 8086:8086
        volumes:
            - influxdb-volume:/var/lib/influxdb
        environment: 
            - INFLUXDB_DB=sensors
            - INFLUXDB_USER=grafana
            - INFLUXDB_USER_PASSWORD=password
            - INFLUXDB_ADMIN_ENABLED=true
            - INFLUXDB_ADMIN_USER=admin 
            - INFLUXDB_ADMIN_PASSWORD=password 
        depends_on: 
            - opcua-client

    grafana:
        image: grafana/grafana
        container_name: grafana
        restart: always
        ports:
            - 3000:3000
        volumes:
            - grafana-volume:/var/lib/grafana
        logging: 
            driver: "none"
        depends_on: 
            - influxdb
    
    scada:
        build: ./06-scada-tkinter
        container_name: scada
        environment:
            - DISPLAY=$DISPLAY
        volumes:
            - /tmp/.X11-unix:/tmp/.X11-unix
        depends_on: 
            - grafana

volumes:
    grafana-volume:
    influxdb-volume:
